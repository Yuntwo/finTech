// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: balance.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id 商户id
	Type   int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                   // 1 用户 2 商户
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{0}
}

func (x *GetBalanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBalanceRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Available uint64 `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`
	Frozen    uint64 `protobuf:"varint,5,opt,name=frozen,proto3" json:"frozen,omitempty"`
}

func (x *GetBalanceResponse) Reset() {
	*x = GetBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResponse) ProtoMessage() {}

func (x *GetBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetBalanceResponse) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetBalanceResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBalanceResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetBalanceResponse) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *GetBalanceResponse) GetFrozen() uint64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

type SubBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *SubBalanceRequest) Reset() {
	*x = SubBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubBalanceRequest) ProtoMessage() {}

func (x *SubBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubBalanceRequest.ProtoReflect.Descriptor instead.
func (*SubBalanceRequest) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{2}
}

func (x *SubBalanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubBalanceRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubBalanceRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type SubBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubBalanceResponse) Reset() {
	*x = SubBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubBalanceResponse) ProtoMessage() {}

func (x *SubBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubBalanceResponse.ProtoReflect.Descriptor instead.
func (*SubBalanceResponse) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{3}
}

func (x *SubBalanceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ReduceBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ReduceBalanceRequest) Reset() {
	*x = ReduceBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceBalanceRequest) ProtoMessage() {}

func (x *ReduceBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceBalanceRequest.ProtoReflect.Descriptor instead.
func (*ReduceBalanceRequest) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{4}
}

func (x *ReduceBalanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReduceBalanceRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReduceBalanceRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ReduceBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReduceBalanceResponse) Reset() {
	*x = ReduceBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceBalanceResponse) ProtoMessage() {}

func (x *ReduceBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceBalanceResponse.ProtoReflect.Descriptor instead.
func (*ReduceBalanceResponse) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{5}
}

func (x *ReduceBalanceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SubFrozenBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *SubFrozenBalanceRequest) Reset() {
	*x = SubFrozenBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubFrozenBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubFrozenBalanceRequest) ProtoMessage() {}

func (x *SubFrozenBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubFrozenBalanceRequest.ProtoReflect.Descriptor instead.
func (*SubFrozenBalanceRequest) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{6}
}

func (x *SubFrozenBalanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubFrozenBalanceRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SubFrozenBalanceRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type SubFrozenBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubFrozenBalanceResponse) Reset() {
	*x = SubFrozenBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubFrozenBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubFrozenBalanceResponse) ProtoMessage() {}

func (x *SubFrozenBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubFrozenBalanceResponse.ProtoReflect.Descriptor instead.
func (*SubFrozenBalanceResponse) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{7}
}

func (x *SubFrozenBalanceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ReduceFrozenBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ReduceFrozenBalanceRequest) Reset() {
	*x = ReduceFrozenBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceFrozenBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceFrozenBalanceRequest) ProtoMessage() {}

func (x *ReduceFrozenBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceFrozenBalanceRequest.ProtoReflect.Descriptor instead.
func (*ReduceFrozenBalanceRequest) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{8}
}

func (x *ReduceFrozenBalanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReduceFrozenBalanceRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReduceFrozenBalanceRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ReduceFrozenBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReduceFrozenBalanceResponse) Reset() {
	*x = ReduceFrozenBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceFrozenBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceFrozenBalanceResponse) ProtoMessage() {}

func (x *ReduceFrozenBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceFrozenBalanceResponse.ProtoReflect.Descriptor instead.
func (*ReduceFrozenBalanceResponse) Descriptor() ([]byte, []int) {
	return file_balance_proto_rawDescGZIP(), []int{9}
}

func (x *ReduceFrozenBalanceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_balance_proto protoreflect.FileDescriptor

var file_balance_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x22, 0x4f, 0x0a,
	0x11, 0x53, 0x75, 0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x2c,
	0x0a, 0x12, 0x53, 0x75, 0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x14,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x22, 0x2f, 0x0a, 0x15, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x55, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x32, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x1a,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x35, 0x0a, 0x1b, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x86, 0x04,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x26, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x74, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balance_proto_rawDescOnce sync.Once
	file_balance_proto_rawDescData = file_balance_proto_rawDesc
)

func file_balance_proto_rawDescGZIP() []byte {
	file_balance_proto_rawDescOnce.Do(func() {
		file_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_balance_proto_rawDescData)
	})
	return file_balance_proto_rawDescData
}

var file_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_balance_proto_goTypes = []interface{}{
	(*GetBalanceRequest)(nil),           // 0: mall.rpc.balance.GetBalanceRequest
	(*GetBalanceResponse)(nil),          // 1: mall.rpc.balance.GetBalanceResponse
	(*SubBalanceRequest)(nil),           // 2: mall.rpc.balance.SubBalanceRequest
	(*SubBalanceResponse)(nil),          // 3: mall.rpc.balance.SubBalanceResponse
	(*ReduceBalanceRequest)(nil),        // 4: mall.rpc.balance.ReduceBalanceRequest
	(*ReduceBalanceResponse)(nil),       // 5: mall.rpc.balance.ReduceBalanceResponse
	(*SubFrozenBalanceRequest)(nil),     // 6: mall.rpc.balance.SubFrozenBalanceRequest
	(*SubFrozenBalanceResponse)(nil),    // 7: mall.rpc.balance.SubFrozenBalanceResponse
	(*ReduceFrozenBalanceRequest)(nil),  // 8: mall.rpc.balance.ReduceFrozenBalanceRequest
	(*ReduceFrozenBalanceResponse)(nil), // 9: mall.rpc.balance.ReduceFrozenBalanceResponse
}
var file_balance_proto_depIdxs = []int32{
	0, // 0: mall.rpc.balance.Balance.GetBalance:input_type -> mall.rpc.balance.GetBalanceRequest
	2, // 1: mall.rpc.balance.Balance.SubBalance:input_type -> mall.rpc.balance.SubBalanceRequest
	4, // 2: mall.rpc.balance.Balance.ReduceBalance:input_type -> mall.rpc.balance.ReduceBalanceRequest
	6, // 3: mall.rpc.balance.Balance.SubFrozenBalance:input_type -> mall.rpc.balance.SubFrozenBalanceRequest
	8, // 4: mall.rpc.balance.Balance.ReduceFrozenBalance:input_type -> mall.rpc.balance.ReduceFrozenBalanceRequest
	1, // 5: mall.rpc.balance.Balance.GetBalance:output_type -> mall.rpc.balance.GetBalanceResponse
	3, // 6: mall.rpc.balance.Balance.SubBalance:output_type -> mall.rpc.balance.SubBalanceResponse
	5, // 7: mall.rpc.balance.Balance.ReduceBalance:output_type -> mall.rpc.balance.ReduceBalanceResponse
	7, // 8: mall.rpc.balance.Balance.SubFrozenBalance:output_type -> mall.rpc.balance.SubFrozenBalanceResponse
	9, // 9: mall.rpc.balance.Balance.ReduceFrozenBalance:output_type -> mall.rpc.balance.ReduceFrozenBalanceResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_balance_proto_init() }
func file_balance_proto_init() {
	if File_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubFrozenBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubFrozenBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceFrozenBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceFrozenBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_balance_proto_goTypes,
		DependencyIndexes: file_balance_proto_depIdxs,
		MessageInfos:      file_balance_proto_msgTypes,
	}.Build()
	File_balance_proto = out.File
	file_balance_proto_rawDesc = nil
	file_balance_proto_goTypes = nil
	file_balance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BalanceClient is the client API for Balance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BalanceClient interface {
	// 获取余额
	GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
	// 增加余额
	SubBalance(ctx context.Context, in *SubBalanceRequest, opts ...grpc.CallOption) (*SubBalanceResponse, error)
	// 减少余额
	ReduceBalance(ctx context.Context, in *ReduceBalanceRequest, opts ...grpc.CallOption) (*ReduceBalanceResponse, error)
	// 增加冻结余额
	SubFrozenBalance(ctx context.Context, in *SubFrozenBalanceRequest, opts ...grpc.CallOption) (*SubFrozenBalanceResponse, error)
	// 减少冻结余额
	ReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceRequest, opts ...grpc.CallOption) (*ReduceFrozenBalanceResponse, error)
}

type balanceClient struct {
	cc grpc.ClientConnInterface
}

func NewBalanceClient(cc grpc.ClientConnInterface) BalanceClient {
	return &balanceClient{cc}
}

func (c *balanceClient) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	out := new(GetBalanceResponse)
	err := c.cc.Invoke(ctx, "/mall.rpc.balance.Balance/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceClient) SubBalance(ctx context.Context, in *SubBalanceRequest, opts ...grpc.CallOption) (*SubBalanceResponse, error) {
	out := new(SubBalanceResponse)
	err := c.cc.Invoke(ctx, "/mall.rpc.balance.Balance/SubBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceClient) ReduceBalance(ctx context.Context, in *ReduceBalanceRequest, opts ...grpc.CallOption) (*ReduceBalanceResponse, error) {
	out := new(ReduceBalanceResponse)
	err := c.cc.Invoke(ctx, "/mall.rpc.balance.Balance/ReduceBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceClient) SubFrozenBalance(ctx context.Context, in *SubFrozenBalanceRequest, opts ...grpc.CallOption) (*SubFrozenBalanceResponse, error) {
	out := new(SubFrozenBalanceResponse)
	err := c.cc.Invoke(ctx, "/mall.rpc.balance.Balance/SubFrozenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceClient) ReduceFrozenBalance(ctx context.Context, in *ReduceFrozenBalanceRequest, opts ...grpc.CallOption) (*ReduceFrozenBalanceResponse, error) {
	out := new(ReduceFrozenBalanceResponse)
	err := c.cc.Invoke(ctx, "/mall.rpc.balance.Balance/ReduceFrozenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BalanceServer is the server API for Balance service.
type BalanceServer interface {
	// 获取余额
	GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error)
	// 增加余额
	SubBalance(context.Context, *SubBalanceRequest) (*SubBalanceResponse, error)
	// 减少余额
	ReduceBalance(context.Context, *ReduceBalanceRequest) (*ReduceBalanceResponse, error)
	// 增加冻结余额
	SubFrozenBalance(context.Context, *SubFrozenBalanceRequest) (*SubFrozenBalanceResponse, error)
	// 减少冻结余额
	ReduceFrozenBalance(context.Context, *ReduceFrozenBalanceRequest) (*ReduceFrozenBalanceResponse, error)
}

// UnimplementedBalanceServer can be embedded to have forward compatible implementations.
type UnimplementedBalanceServer struct {
}

func (*UnimplementedBalanceServer) GetBalance(context.Context, *GetBalanceRequest) (*GetBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedBalanceServer) SubBalance(context.Context, *SubBalanceRequest) (*SubBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubBalance not implemented")
}
func (*UnimplementedBalanceServer) ReduceBalance(context.Context, *ReduceBalanceRequest) (*ReduceBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReduceBalance not implemented")
}
func (*UnimplementedBalanceServer) SubFrozenBalance(context.Context, *SubFrozenBalanceRequest) (*SubFrozenBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubFrozenBalance not implemented")
}
func (*UnimplementedBalanceServer) ReduceFrozenBalance(context.Context, *ReduceFrozenBalanceRequest) (*ReduceFrozenBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReduceFrozenBalance not implemented")
}

func RegisterBalanceServer(s *grpc.Server, srv BalanceServer) {
	s.RegisterService(&_Balance_serviceDesc, srv)
}

func _Balance_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mall.rpc.balance.Balance/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).GetBalance(ctx, req.(*GetBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Balance_SubBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).SubBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mall.rpc.balance.Balance/SubBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).SubBalance(ctx, req.(*SubBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Balance_ReduceBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReduceBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).ReduceBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mall.rpc.balance.Balance/ReduceBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).ReduceBalance(ctx, req.(*ReduceBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Balance_SubFrozenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubFrozenBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).SubFrozenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mall.rpc.balance.Balance/SubFrozenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).SubFrozenBalance(ctx, req.(*SubFrozenBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Balance_ReduceFrozenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReduceFrozenBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServer).ReduceFrozenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mall.rpc.balance.Balance/ReduceFrozenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServer).ReduceFrozenBalance(ctx, req.(*ReduceFrozenBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Balance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mall.rpc.balance.Balance",
	HandlerType: (*BalanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Balance_GetBalance_Handler,
		},
		{
			MethodName: "SubBalance",
			Handler:    _Balance_SubBalance_Handler,
		},
		{
			MethodName: "ReduceBalance",
			Handler:    _Balance_ReduceBalance_Handler,
		},
		{
			MethodName: "SubFrozenBalance",
			Handler:    _Balance_SubFrozenBalance_Handler,
		},
		{
			MethodName: "ReduceFrozenBalance",
			Handler:    _Balance_ReduceFrozenBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "balance.proto",
}
